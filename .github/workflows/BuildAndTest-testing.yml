name: Build and Test - Testing Branch

on:
  push:
    branches-ignore:
      - main

defaults:
  run:
    # change this if your nextjs app does not live at the root of the repo
    working-directory: ./

jobs:
  Coverage:
    runs-on: self-hosted
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
      #- uses: ArtiomTr/jest-coverage-report-action@v2

  # Analyze:
  #   runs-on: self-hosted
  #   needs: Coverage
  #   steps:
  #     - uses: actions/checkout@v2

  #     # Cache node_modules
  #     - name: Cache node_modules
  #       uses: actions/cache@v4
  #       with:
  #         path: |
  #           node_modules
  #           .next/cache
  #         key: node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
  #         restore-keys: |
  #           node-modules-${{ runner.os }}-

  #     - name: Set up node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: "20.x"

  #     - name: Install dependencies
  #       uses: bahmutov/npm-install@v1

  #     - name: Restore next build
  #       uses: actions/cache@v4
  #       id: restore-build-cache
  #       env:
  #         cache-name: cache-next-build
  #       with:
  #         # if you use a custom build directory, replace all instances of `.next` in this file with your build directory
  #         # ex: if your app builds to `dist`, replace `.next` with `dist`
  #         path: ./projects/wp-nextjs-app/.next/cache
  #         # change this if you prefer a more strict cache
  #         key: ${{ runner.os }}-build-${{ env.cache-name }}

  #     - name: Build next.js app
  #       # change this if your site requires a custom build command
  #       run: npm run build

  #     # Here's the first place where next-bundle-analysis' own script is used
  #     # This step pulls the raw bundle stats for the current bundle
  #     - name: Analyze bundle
  #       run: npx -p nextjs-bundle-analysis report

  #     - name: Upload bundle
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: bundle
  #         path: ./projects/wp-nextjs-app/.next/analyze/__bundle_analysis.json

  #     - name: Download base branch bundle stats
  #       uses: dawidd6/action-download-artifact@v2
  #       if: success() && github.event.number
  #       with:
  #         workflow: nextjs_bundle_analysis.yml
  #         branch: ${{ github.event.pull_request.base.ref }}
  #         path: ./projects/wp-nextjs-app/.next/analyze/base

  #     # And here's the second place - this runs after we have both the current and
  #     # base branch bundle stats, and will compare them to determine what changed.
  #     # There are two configurable arguments that come from package.json:
  #     #
  #     # - budget: optional, set a budget (bytes) against which size changes are measured
  #     #           it's set to 350kb here by default, as informed by the following piece:
  #     #           https://infrequently.org/2021/03/the-performance-inequality-gap/
  #     #
  #     # - red-status-percentage: sets the percent size increase where you get a red
  #     #                          status indicator, defaults to 20%
  #     #
  #     # Either of these arguments can be changed or removed by editing the `nextBundleAnalysis`
  #     # entry in your package.json file.
  #     - name: Compare with base branch bundle
  #       if: success() && github.event.number
  #       run: ls -laR ./projects/wp-nextjs-app/.next/analyze/base && npx -p nextjs-bundle-analysis compare

  #     - name: Get comment body
  #       id: get-comment-body
  #       if: success() && github.event.number
  #       run: |
  #         body=$(cat ./projects/wp-nextjs-app/.next/analyze/__bundle_analysis_comment.txt)
  #         body="${body//'%'/'%25'}"
  #         body="${body//$'\n'/'%0A'}"
  #         body="${body//$'\r'/'%0D'}"
  #         echo ::set-output name=body::$body

  #     - name: Find Comment
  #       uses: peter-evans/find-comment@v1
  #       if: success() && github.event.number
  #       id: fc
  #       with:
  #         issue-number: ${{ github.event.number }}
  #         body-includes: "<!-- __NEXTJS_BUNDLE -->"

  #     - name: Create Comment
  #       uses: peter-evans/create-or-update-comment@v1.4.4
  #       if: success() && github.event.number && steps.fc.outputs.comment-id == 0
  #       with:
  #         issue-number: ${{ github.event.number }}
  #         body: ${{ steps.get-comment-body.outputs.body }}

  #     - name: Update Comment
  #       uses: peter-evans/create-or-update-comment@v1.4.4
  #       if: success() && github.event.number && steps.fc.outputs.comment-id != 0
  #       with:
  #         issue-number: ${{ github.event.number }}
  #         body: ${{ steps.get-comment-body.outputs.body }}
  #         comment-id: ${{ steps.fc.outputs.comment-id }}
  #         edit-mode: replace

  # # Update_permissions:
  # #   runs-on: self-hosted
  # #   needs: Build_Image

  # #   steps:
  # #     - name: Checkout repository
  # #       uses: actions/checkout@v4

  # #     - name: Install dependencies
  # #       run: npm install

  # #     - name: make env file
  # #       run: echo "DATABASE_URL=mysql://node:nodenode@10.4.5.227:3306/dematicScrewfixTrenthamDashboard" > .env

  # #     - name: Generate Prisma
  # #       run: npm run prisma-merge

  # #     - name: Update Permissions
  # #       run: |
  # #         npm run make-permissions

  Build_Image:
    runs-on: self-hosted
    needs: Coverage

    steps:
      - uses: actions/checkout@v2

      # Cache node_modules
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .next/cache
          key: node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: dematicscrewfixtrenthamdashboard
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value={{sha}},enable=${{ github.ref_type != 'tag' }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Image
        run: |
          docker build -t dematicscrewfixtrenthamdashboard:testing -f Dockerfile . --progress=plain --no-cache

      - name: Push Image
        run: |
          docker tag dematicscrewfixtrenthamdashboard:testing jwlyons/dematicscrewfixtrenthamdashboard:testing
          docker push jwlyons/dematicscrewfixtrenthamdashboard:testing
          docker tag dematicscrewfixtrenthamdashboard:testing jwlyons/dematicscrewfixtrenthamdashboard:${{ steps.metadata.outputs.version }}
          docker push jwlyons/dematicscrewfixtrenthamdashboard:${{ steps.metadata.outputs.version }}

      - name: Remove Docker Images
        run: |
          docker rmi dematicscrewfixtrenthamdashboard:testing
          docker rmi jwlyons/dematicscrewfixtrenthamdashboard:testing
          docker rmi jwlyons/dematicscrewfixtrenthamdashboard:${{ steps.metadata.outputs.version }}
